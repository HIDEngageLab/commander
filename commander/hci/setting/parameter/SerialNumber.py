# -*- coding: utf-8 -*-

# SPDX-FileCopyrightText: 2024 Roman Koch <koch.roman@gmail.com>
# SPDX-FileType: SOURCE
# SPDX-FileContributor: Created by Roman Koch
# SPDX-License-Identifier: MIT


class SerialNumber:
    """
    unique serial number (12 byte, autogenerated)

    input:
        none, get only
    """

    def __init__(self, value=None):

        if value is not None:
            self.__value = list()
            for val in value:
                self.__value.append(int(val, 16))
            if len(self.__value) >= 12:
                self.__value = self.__value[:12]
            else:
                self.__value = [0] * (self.type_len -
                                      len(self.__value)) + self.__value
        else:
            self.__value = [0xff] * 12

    @property
    def value(self):
        return self.__value

    def serialize(self, value):
        if len(value) < self.type_len:
            value = [0] * (self.type_len - len(value)) + value

        self.__value = value

    @property
    def type_len(self):
        return 12

    def __str__(self):
        s = '%s' % (' '.join('%02X' % a for a in self.__value))
        return s
